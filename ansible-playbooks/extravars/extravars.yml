# linux_common variables
LC_CHANGE_HOSTNAME: False
#ansible_user_id: "" # set to the ssh user
#inventory_hostname_short: ""
LC_SET_LOCALES: False
LC_SETUP_SUDO: False
LC_LOCALES:
  - "en_US ISO-8859-1"
  - "en_US.ISO-8859-15 ISO-8859-15"
  - "en_US.UTF-8 UTF-8"
LC_DEFAULT_LOCALE: "en_US.UTF-8 UTF-8"
LC_MODIFY_SYSTEM_SHELL_ENV: True
LC_MODIFY_SKEL: True
LC_MODIFY_ROOT_SHELL_ENV: True
LC_MODIFY_USER_SHELL_ENV: True
LC_DEBIAN_MIRROR: "deb.debian.org"
LC_INSTALL_PACKAGES: True
LC_REBOOT: False
LC_CHANGE_TIMEZONE: False
LC_ENABLE_SRC_REPOS: False
LC_ENABLE_APT_BACKPORTS: False
LC_CHANGES_APT_DEFAULT_SOURCES_LIST: False
LC_TIMEZONE: "Asia/Karachi"
LC_SET_KERNEL_PARAMETERS: True
LC_KERNEL_PARAMETERS:
  - { name: "vm.swappiness", value: 1, state: present }
  - { name: "vm.vfs_cache_pressure", value: 50, state: present }
  - { name: "net.ipv4.tcp_timestamps", value: 0, state: present }
  - { name: "fs.inotify.max_user_watches", value: 524288, state: present }
  - { name: "fs.inotify.max_user_instances", value: 524288, state: present }
  - { name: "net.ipv4.ip_forward", value: 1, state: present }
LC_EXTRA_PACKAGES:
  - "gpg"
  - "apt-transport-https"
  - "podman"

# motd variables
memory_info: False
network_info: True

# acme variables
ACME_GIT_VERSION: "3.0.6"
ACME_DOMAINS:
  PRIMARY: "{{ ACME_DOMAIN_NAME }}"
  ALT: [ "*.{{ ACME_DOMAIN_NAME }}" ]
ACME_ENVIRONMENT_VARS:
  HE_Username: "{{ ACME_HE_USERNAME }}"
  HE_Password: "{{ ACME_HE_PASSWORD }}"
ACME_CERT_DIR: "/etc/LetsEncrypt/{{ ACME_DOMAINS.PRIMARY }}"
ACME_CERT_FILE_PATH: "{{ ACME_CERT_DIR }}/{{ ACME_DOMAINS.PRIMARY }}.crt"
ACME_KEY_FILE_PATH: "{{ ACME_CERT_DIR }}/{{ ACME_DOMAINS.PRIMARY }}.key"
ACME_CA_FILE_PATH: "{{ ACME_CERT_DIR }}/{{ ACME_DOMAINS.PRIMARY }}-ca.crt"
ACME_FULLCHAIN_FILE_PATH: "{{ ACME_CERT_DIR }}/{{ ACME_DOMAINS.PRIMARY }}-fullchain.crt"
ACME_ISSUE_COMMAND: |
  {{ ACME_SHELL_SCRIPT }} --server letsencrypt --issue --dns dns_he --config-home {{ ACME_HOME_DIR }} --log {{ ACME_LOG_FILE }} --cert-file {{ ACME_CERT_FILE_PATH }} --key-file {{ ACME_KEY_FILE_PATH }} --ca-file {{ ACME_CA_FILE_PATH }} --fullchain-file {{ ACME_FULLCHAIN_FILE_PATH }} {% if ACME_DOMAINS.PRIMARY is defined and ACME_DOMAINS.PRIMARY | length %}-d {{ ACME_DOMAINS.PRIMARY }}{% endif %}{% if ACME_DOMAINS.ALT is defined and ACME_DOMAINS.ALT | length %}{% for domain in ACME_DOMAINS.ALT %} -d "{{ domain }}"{% endfor %}{% endif %}
ACME_RENEW_CRON_COMMAND: |
  {{ ACME_SHELL_SCRIPT }} --cron --home {{ ACME_HOME_DIR }} --log {{ ACME_LOG_FILE }}

# Containerized service names
NTOPNG_SERVICE_NAME: "ntopng"
REDIS_SERVICE_NAME: "redis"
GRAFANA_SERVICE_NAME: "grafana"
INFLUXDB_SERVICE_NAME: "influxdb"
POWERDNS_SERVICE_NAME: "powerdns"
MARIADB_SERVICE_NAME: "mariadb"
KEA_SERVICE_NAME: "kea"
NGINX_SERVICE_NAME: "nginx"
OMADA_SERVICE_NAME: "omada"
TELEGRAF_SERVICE_NAME: "telegraf"

# grafana variables
GRAFANA_HTTP_ADDR: 127.0.0.1
GRAFANA_HTTP_PORT: 3001
GRAFANA_PLUGINS: "ntop-ntopng-datasource"

# influxdb variables
INFLUXDB_HTTP_AUTH_ENABLED: true
INFLUXDB_HTTP_LOG_ENABLED: false
INFLUXDB_CONTINUOUS_QUERIES_LOG_ENABLED: false
INFLUXDB_DATA_QUERY_LOG_ENABLED: false
INFLUXDB_HTTP_BIND_ADDRESS: "{{ INFLUXDB_HTTP_HOST }}:{{ INFLUXDB_HTTP_PORT }}"

# powerdns variables
PDNS_MYSQL_HOST: 127.0.0.1
PDNS_MYSQL_USERNAME: "pdns"
PDNS_MYSQL_DATABASE: "pdns"
PDNS_LOCAL_PORT: 5300
PDNS_API_ADDRESS: 127.0.0.1
PDNS_API_PORT: 8081
PDNS_LOCAL_ADDRESS: "{{ PDNS_API_ADDRESS }}"
PDNS_RECURSOR_LOCAL_DNS_ADDRESS: 127.0.0.1
PDNS_RECURSOR_LOCAL_DNS_PORT: "{{ PDNS_LOCAL_PORT }}"
PDNS_RECURSOR_UPSTREAM_RESOLVERS: "8.8.8.8;8.8.4.4"
PDNS_MANAGER_API_HOST: "{{ PDNS_API_ADDRESS }}"
PDNS_MANAGER_API_PORT: "{{ PDNS_API_PORT }}"

# mariadb variables
MYSQL_DATABASES: "{{ MARIADB_DATABASES }}"
MYSQL_LOGIN_ENDPOINT: 127.0.0.1
MYSQL_LOGIN_USERNAME: "root"
MYSQL_LOGIN_PASSWORD: "{{ MARIADB_ROOT_PASSWORD }}"

# kea variables
KEA_MYSQL_HOST: 127.0.0.1
KEA_MYSQL_DATABASE: "kea"
KEA_MYSQL_USERNAME: "{{ KEA_MYSQL_DATABASE }}"
KEA_SERVER_CONFIG:
  Dhcp4:
    multi-threading:
      enable-multi-threading: false
    interfaces-config:
      interfaces:
        - "{{ FIREWALL_LAN_INTERFACE }}"
    control-socket:
      socket-type: unix
      socket-name: "/usr/local/var/run/kea/kea-dhcp4-server/kea4-ctrl-socket"
    hooks-libraries:
      - library: "/usr/local/lib/kea/hooks/libkea_python.so"
        parameters:
          libpython: libpython3.11.so.1
          module: "/usr/local/lib/kea/keahook.py"
    host-reservation-identifiers:
      - circuit-id
      - hw-address
      - duid
      - client-id
    lease-database:
      type: memfile
      persist: false
    hosts-database:
      type: mysql
      name: "{{ KEA_MYSQL_DATABASE }}"
      user: "{{ KEA_MYSQL_USERNAME }}"
      password: "{{ KEA_MYSQL_PASSWORD }}"
      host: "{{ KEA_MYSQL_HOST }}"
      port: 3306
    subnet4:
      - id: 1
        subnet: "{{ KEA_SUBNET }}"
        pools:
          - pool: "{{ KEA_SUBNET_POOL }}"
        option-data:
          - name: routers
            data: "{{ KEA_SUBNET_ROUTER }}"
          - name: domain-name-servers
            data: "{{ KEA_SUBNET_NAMESERVER }}"
KEA_CTRL_AGENT_CONFIG:
  Control-agent:
    http-host: 127.0.0.1
    http-port: 8084
    authentication:
      type: basic
      realm: kea-control-agent
      clients:
        - user: "{{ KEA_BASIC_AUTH_USERNAME }}"
          password: "{{ KEA_BASIC_AUTH_PASSWORD }}"
    control-sockets:
      dhcp4:
        socket-type: unix
        socket-name: "/usr/local/var/run/kea/kea-dhcp4-server/kea4-ctrl-socket"
    loggers:
      - name: kea-ctrl-agent
        output_options:
          - output: stdout
            pattern: "%-5p %m\n"
        severity: INFO
        debuglevel: 0
KEA_API_URL: "http://{{ KEA_CTRL_AGENT_CONFIG['Control-agent']['http-host'] }}:{{ KEA_CTRL_AGENT_CONFIG['Control-agent']['http-port'] }}"

# omada variables
OMADA_WEB_HOST: 127.0.0.1
OMADA_WEB_PORT: "{{ OMADA_CONFIG.CONFIGMAPS[0].data.MANAGE_HTTPS_PORT }}"
